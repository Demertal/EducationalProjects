//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Курсовая_ASP.NET
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HostelEntities : DbContext
    {
        public HostelEntities()
            : base("name=HostelEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Accommodation> Accommodation { get; set; }
        public virtual DbSet<Cities> Cities { get; set; }
        public virtual DbSet<DaysWeek> DaysWeek { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<Floors> Floors { get; set; }
        public virtual DbSet<Residents> Residents { get; set; }
        public virtual DbSet<Rooms> Rooms { get; set; }
        public virtual DbSet<RoomTypes> RoomTypes { get; set; }
        public virtual DbSet<Сleaning> Сleaning { get; set; }
    
        [DbFunction("HostelEntities", "AccommodationView")]
        public virtual IQueryable<AccommodationView_Result> AccommodationView()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<AccommodationView_Result>("[HostelEntities].[AccommodationView]()");
        }
    
        [DbFunction("HostelEntities", "CitiesForResidentView")]
        public virtual IQueryable<CitiesForResidentView_Result> CitiesForResidentView()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CitiesForResidentView_Result>("[HostelEntities].[CitiesForResidentView]()");
        }
    
        [DbFunction("HostelEntities", "CleaningView")]
        public virtual IQueryable<CleaningView_Result> CleaningView()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CleaningView_Result>("[HostelEntities].[CleaningView]()");
        }
    
        [DbFunction("HostelEntities", "CleaningViewByEmployee")]
        public virtual IQueryable<CleaningViewByEmployee_Result> CleaningViewByEmployee(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CleaningViewByEmployee_Result>("[HostelEntities].[CleaningViewByEmployee](@id)", idParameter);
        }
    
        [DbFunction("HostelEntities", "FindEmployeeByDayAndFloor")]
        public virtual IQueryable<FindEmployeeByDayAndFloor_Result> FindEmployeeByDayAndFloor(Nullable<int> id_day, Nullable<int> id_floor)
        {
            var id_dayParameter = id_day.HasValue ?
                new ObjectParameter("id_day", id_day) :
                new ObjectParameter("id_day", typeof(int));
    
            var id_floorParameter = id_floor.HasValue ?
                new ObjectParameter("id_floor", id_floor) :
                new ObjectParameter("id_floor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FindEmployeeByDayAndFloor_Result>("[HostelEntities].[FindEmployeeByDayAndFloor](@id_day, @id_floor)", id_dayParameter, id_floorParameter);
        }
    
        [DbFunction("HostelEntities", "FindFreePlaceRooms")]
        public virtual IQueryable<FindFreePlaceRooms_Result> FindFreePlaceRooms()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FindFreePlaceRooms_Result>("[HostelEntities].[FindFreePlaceRooms]()");
        }
    
        [DbFunction("HostelEntities", "FindPartiallyFreePlaceRooms")]
        public virtual IQueryable<FindPartiallyFreePlaceRooms_Result> FindPartiallyFreePlaceRooms()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FindPartiallyFreePlaceRooms_Result>("[HostelEntities].[FindPartiallyFreePlaceRooms]()");
        }
    
        [DbFunction("HostelEntities", "FindResidentByCity")]
        public virtual IQueryable<FindResidentByCity_Result> FindResidentByCity(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FindResidentByCity_Result>("[HostelEntities].[FindResidentByCity](@id)", idParameter);
        }
    
        [DbFunction("HostelEntities", "FindResidentByRoom")]
        public virtual IQueryable<FindResidentByRoom_Result> FindResidentByRoom(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FindResidentByRoom_Result>("[HostelEntities].[FindResidentByRoom](@id)", idParameter);
        }
    
        [DbFunction("HostelEntities", "Report")]
        public virtual IQueryable<Report_Result> Report(Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Report_Result>("[HostelEntities].[Report](@start, @end)", startParameter, endParameter);
        }
    
        [DbFunction("HostelEntities", "ResidentsView")]
        public virtual IQueryable<ResidentsView_Result> ResidentsView()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ResidentsView_Result>("[HostelEntities].[ResidentsView]()");
        }
    
        [DbFunction("HostelEntities", "RoomsView")]
        public virtual IQueryable<RoomsView_Result> RoomsView()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<RoomsView_Result>("[HostelEntities].[RoomsView]()");
        }
    
        [DbFunction("HostelEntities", "RoomsViewForResident")]
        public virtual IQueryable<RoomsViewForResident_Result> RoomsViewForResident()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<RoomsViewForResident_Result>("[HostelEntities].[RoomsViewForResident]()");
        }
    }
}
